// This file is auto-generated by @hey-api/openapi-ts

export const $ConsumerProfile = {
  type: "object",
  properties: {
    user_info: {
      type: "string",
      readOnly: true,
    },
    delivery_address: {
      type: "string",
      maxLength: 255,
    },
  },
  required: ["delivery_address", "user_info"],
} as const;

export const $Message = {
  type: "object",
  properties: {
    message: {
      type: "string",
    },
  },
  required: ["message"],
} as const;

export const $PaginatedUserList = {
  type: "object",
  required: ["count", "results"],
  properties: {
    count: {
      type: "integer",
      example: 123,
    },
    next: {
      type: "string",
      nullable: true,
      format: "uri",
      example: "http://api.example.org/accounts/?offset=400&limit=100",
    },
    previous: {
      type: "string",
      nullable: true,
      format: "uri",
      example: "http://api.example.org/accounts/?offset=200&limit=100",
    },
    results: {
      type: "array",
      items: {
        $ref: "#/components/schemas/User",
      },
    },
  },
} as const;

export const $PatchedUser = {
  type: "object",
  properties: {
    id: {
      type: "integer",
      readOnly: true,
    },
    email: {
      type: "string",
      format: "email",
      maxLength: 255,
    },
    is_active: {
      type: "boolean",
      description:
        "Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
    },
    is_staff: {
      type: "boolean",
      description: "Designates whether the user can log into this admin site.",
    },
    is_superuser: {
      type: "boolean",
      title: "Superuser status",
      description:
        "Designates that this user has all permissions without explicitly assigning them.",
    },
    created: {
      type: "string",
      format: "date-time",
      readOnly: true,
    },
    modified: {
      type: "string",
      format: "date-time",
      readOnly: true,
    },
    last_login: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    user_type: {
      $ref: "#/components/schemas/UserTypeEnum",
    },
    consumer_profile: {
      allOf: [
        {
          $ref: "#/components/schemas/ConsumerProfile",
        },
      ],
      readOnly: true,
    },
    supplier_profile: {
      allOf: [
        {
          $ref: "#/components/schemas/SupplierProfile",
        },
      ],
      readOnly: true,
    },
  },
} as const;

export const $SupplierProfile = {
  type: "object",
  properties: {
    user_info: {
      type: "string",
      readOnly: true,
    },
    location_address: {
      type: "string",
      maxLength: 255,
    },
  },
  required: ["location_address", "user_info"],
} as const;

export const $User = {
  type: "object",
  properties: {
    id: {
      type: "integer",
      readOnly: true,
    },
    email: {
      type: "string",
      format: "email",
      maxLength: 255,
    },
    is_active: {
      type: "boolean",
      description:
        "Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
    },
    is_staff: {
      type: "boolean",
      description: "Designates whether the user can log into this admin site.",
    },
    is_superuser: {
      type: "boolean",
      title: "Superuser status",
      description:
        "Designates that this user has all permissions without explicitly assigning them.",
    },
    created: {
      type: "string",
      format: "date-time",
      readOnly: true,
    },
    modified: {
      type: "string",
      format: "date-time",
      readOnly: true,
    },
    last_login: {
      type: "string",
      format: "date-time",
      nullable: true,
    },
    user_type: {
      $ref: "#/components/schemas/UserTypeEnum",
    },
    consumer_profile: {
      allOf: [
        {
          $ref: "#/components/schemas/ConsumerProfile",
        },
      ],
      readOnly: true,
    },
    supplier_profile: {
      allOf: [
        {
          $ref: "#/components/schemas/SupplierProfile",
        },
      ],
      readOnly: true,
    },
  },
  required: [
    "consumer_profile",
    "created",
    "email",
    "id",
    "modified",
    "supplier_profile",
  ],
} as const;

export const $UserTypeEnum = {
  enum: ["CONSUMER", "SUPPLIER"],
  type: "string",
  description: `* \`CONSUMER\` - Consumer
* \`SUPPLIER\` - Supplier`,
} as const;
